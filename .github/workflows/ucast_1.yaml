# This is a workflow to pull weather data from NOMADS and process them with am using µcast

name: µcast

# Controls when the action will run.
on: push
  # Schedule the workflow
#   schedule:
#     - cron: '15 5/6 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # Create new forecast tables and stage them as artifacts
  mktab:
    runs-on: ubuntu-latest
    container: astcon/ucast:latest
    strategy:
      matrix:
        site: ['KP', 'LMT', 'SPT','APEX']

    steps:
      - name: Checkout database
        uses: actions/checkout@v2

      - name: Make new forecast table
        run: |
          . /usr/local/am/bin/am.sh
          ucast mktab ${{ matrix.site }} --no-link
      - name: Remove old tables
        run: |
          rm -f $(ls ${{ matrix.site }} | head -n -9)
      - name: Upload tables as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.site }}
          path: ${{ matrix.site }}

  # Create plots and stage them as artifacts
  plot:
    needs: mktab

    runs-on: ubuntu-latest
    container: astcon/ucast:latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Create plots
        run: |
          . /usr/local/am/bin/am.sh
          for d in */; do
            ucast link  ${d%/}
            ucast psite ${d%/} --out ./${d%/}
          done
          ucast pall --out index
          ucast vis  --out index
      - name: Upload plots as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: plots
          path: |
            *.png
            *.pdf
            *.html
  # Store forecast tables
  store:
    needs: mktab

    runs-on: ubuntu-latest

    steps:
      - name: Checkout database
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Cleanup images, just in case `plot` finished
        run: |
          rm -fr plots/
      - name: Add forecast tables to database
        run: |
          MSG="Forecasted from $(ls KP | tail -n1 | sed 's/\.tsv//g;s/_/ /g;s/\./:/g')"
          git config user.name  'µcast bot'
          git config user.email 'bot@µcast'
          git add .
          git commit -m "$MSG" || true
          git push
  # Publish plots to GitHub pages
  publish:
    needs: [plot, store]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout database
        uses: actions/checkout@v2

      - name: Create a clean orphan branch
        run: |
          git checkout --orphan pages
          rm -rf .github *
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: plots

      - name: Add forecast tables to database
        run: |
          MSG="$(git log --pretty='%s' main | grep '^Forecasted from' | head -n1)"
          git config user.name  'µcast bot'
          git config user.email 'bot@µcast'
          git add .
          git commit -m "$MSG"
          git push --force --set-upstream origin pages
